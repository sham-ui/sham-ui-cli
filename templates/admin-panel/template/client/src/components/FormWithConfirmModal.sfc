<template>
    {% import FormContainer from './FormContainer.sfc' %}
    {% import ModalWindow from './ModalWindow.sfc' %}

    <FormContainer
        formClass="form-layout"
        submitText=\{{submitText}}
        submit=\{{::this._submitForm}}
        success=\{{onSuccess}}
        getErrors=\{{getErrors}}
    >
        {% defblock 'default' %}
    </FormContainer>

    {% if modalVisible %}
        <ModalWindow
            title=\{{confirmTitle}}
            text=\{{confirmText}}
            onOk=\{{this._handleOkModal}}
            onClose=\{{this._handleCloseModal}}
        />
    {% endif %}
</template>

<script>
    import { mergeWithTemplate, options } from 'sham-ui-macro/babel.macro';

    @mergeWithTemplate
    class FormWithConfirmModal extends Template {
        @options saveData() {
            return Promise.resolve();
        }
        @options onSuccess() {}
        @options getErrors( err ) {
            return err;
        }
        @options confirmCancelErrors = { Messages: [] };

        @options submitText = 'Update';
        @options confirmTitle = '';
        @options confirmText = '';

        @options modalVisible = false;

        _submitForm( formData ) {
            return this._showModal()
                .then(

                    // Click Ok in confirm modal
                    () => this.options.saveData( formData ),

                    // Click Cancel/Close in confirm modal
                    () => Promise.reject( this.options.confirmCancelErrors )
                ).then(

                    // Data saved success
                    ::this._closeModal,

                    // Fail save data (cancel on confirmation or saveData rejected)
                    ( err ) => {
                        this._closeModal();
                        return Promise.reject( err );
                    }
                );
        }

        _showModal() {
            return new Promise( ( resolve, reject ) => {
                this._handleOkModal = resolve;
                this._handleCloseModal = reject;
                this.update( {
                    modalVisible: true
                } );
            } );
        }

        _closeModal() {
            this.update( {
                modalVisible: false
            } );
        }
    }

    export default FormWithConfirmModal;
</script>
