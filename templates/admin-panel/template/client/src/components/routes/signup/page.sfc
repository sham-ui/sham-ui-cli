<template>
    {% import path from 'sham-ui-router/lib/params' %}
    {% import FormContainer from '../../FormContainer.sfc' %}
    {% import Logo from '../../Logo.sht' %}

    <div class="signup-page">
        <FormContainer
            submitText="Sign Up"
            submit=\{{this$._submitForm}}
            success=\{{this$._signUpSuccess}}
            getErrors=\{{this$._getErrors}}
        >
            {% block 'header' %}
                <Logo/>
            {% endblock %}

            {% block 'default' %}
                <div class="form-group">
                    <input name="name" type="text" placeholder="Enter your username" autofocus :onChangeUpdate=\{{$.name}}>
                </div>
                <div class="form-group">
                    <input name="email" type="text" placeholder="Enter your email" :onChangeUpdate=\{{$.email}}>
                </div>
                <div class="form-group">
                    <input name="password" type="password" placeholder="Enter your password" :onChangeUpdate=\{{$.password}}>
                </div>
                <div class="form-group">
                    <input name="password2" type="password" placeholder="Confirm your password" :onChangeUpdate=\{{$.password2}}>
                </div>
            {% endblock %}

            {% block 'footer' %}
                <div class="signup-label">
                    Already a member?
                    <a :hrefto=\{{path("login")}}>
                        Sign In
                    </a>
                </div>
            {% endblock %}
        </FormContainer>
    </div>
</template>

<script>
    function RoutesSignupPage( options, update, didMount ) {
        const name = $();
        const email = $();
        const password = $();
        const password2 = $();

        const state = options( {
            [ name ]: '',
            [ email ]: '',
            [ password ]: '',
            [ password2 ]: ''
        } );

        didMount( () => this.DI.resolve( 'title' ).change( 'Sing Up' ) );

        this$._submitForm = () => this.DI.resolve( 'store' ).signUp( {
            name: state[ name ].trim(),
            email: state[ email ].trim(),
            password: state[ password ],
            password2: state[ password2 ]
        } );

        this$._signUpSuccess = () => {
            this.DI.resolve( 'session' ).resetSessionValidation();
            const router = this.DI.resolve( 'router' );
            router.navigate(
                router.generate( 'home', {} )
            );
        };

        this$._getErrors = ( { Messages = [ 'Signup fail' ] } ) => Messages;
    }

    export default Component( Template, RoutesSignupPage );
</script>
