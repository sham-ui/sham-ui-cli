// Code generated by mockery v2.20.0. DO NOT EDIT.

package login

import (
	model "{{ shortName }}/internal/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockPasswordService is an autogenerated mock type for the PasswordService type
type MockPasswordService struct {
	mock.Mock
}

// Compare provides a mock function with given fields: ctx, hashed, raw
func (_m *MockPasswordService) Compare(ctx context.Context, hashed model.MemberHashedPassword, raw string) error {
	ret := _m.Called(ctx, hashed, raw)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.MemberHashedPassword, string) error); ok {
		r0 = rf(ctx, hashed, raw)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockPasswordService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPasswordService creates a new instance of MockPasswordService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPasswordService(t mockConstructorTestingTNewMockPasswordService) *MockPasswordService {
	mock := &MockPasswordService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
