// Code generated by mockery v2.20.0. DO NOT EDIT.

package ssr

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// MockServerSideRender is an autogenerated mock type for the ServerSideRender type
type MockServerSideRender struct {
	mock.Mock
}

// Render provides a mock function with given fields: ctx, _a1, cookies
func (_m *MockServerSideRender) Render(ctx context.Context, _a1 *url.URL, cookies []*http.Cookie) ([]byte, error) {
	ret := _m.Called(ctx, _a1, cookies)

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *url.URL, []*http.Cookie) ([]byte, error)); ok {
		return rf(ctx, _a1, cookies)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *url.URL, []*http.Cookie) []byte); ok {
		r0 = rf(ctx, _a1, cookies)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *url.URL, []*http.Cookie) error); ok {
		r1 = rf(ctx, _a1, cookies)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockServerSideRender interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockServerSideRender creates a new instance of MockServerSideRender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockServerSideRender(t mockConstructorTestingTNewMockServerSideRender) *MockServerSideRender {
	mock := &MockServerSideRender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
