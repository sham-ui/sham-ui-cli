<template>
    <div class="autocomplete-input" :ref=\{{$.inputContainer}}>
        <input
            autocomplete="off"
            value=\{{query}}
            :onInputUpdate=\{{$.query}}
            :onFocusIn=\{{this$._inputOnFocusIn}}
            :onclick=\{{this$._inputOnFocusIn}}
        />

        {% if showItems %}
            <div class="autocomplete-results">
                {% for item of this$._filterItems( items, query ) %}
                    <div
                        class="result-item"
                        :onclick=\{{() => this$._selectItem( item, query ) }}
                        data-test-item=\{{item.name}}
                    >
                        \{{item.name}}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>
</template>

<script>
    function SelectTag( options, didMount ) {
        const query = $();
        const showItems = $();
        const onChange = $();

        const state = options( {
            [ query ]: '',
            [ showItems ]: false,
            [ onChange ]() {}
        } );

        this$._filterItems = ( items, query ) => {
            const lowerQuery = query.trim().toLowerCase();
            const filtered = items.filter(
                x => x.name.toLowerCase().includes( lowerQuery )
            );
            return lowerQuery.length > 0 ?
                filtered.concat( [
                    { isNew: true, name: 'Add as new tag' }
                ] ) :
                filtered
            ;
        };

        this$._selectItem = ( item, q ) => {
            state( {
                [ showItems ]: false,
                [ query ]: ''
            } );
            state[ onChange ](
                item.isNew ?
                    { name: q } :
                    item
            );
        };

        this$._inputOnFocusIn = () => state[ showItems ] = true;

        const documentClickHandler = ( e ) => {
            if ( this$.inputContainer && !this$.inputContainer.contains( e.target ) ) {
                state[ showItems ] = false;
            }
        };

        didMount( () => {
            document.addEventListener( 'click', documentClickHandler, true );
            return () => document.removeEventListener( 'click', documentClickHandler, true );
        } );
    }

    export default Component( Template, SelectTag );
</script>
