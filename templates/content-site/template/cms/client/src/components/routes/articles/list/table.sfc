<template>
    {% import path from 'sham-ui-router/lib/params' %}
    {% import ModalWindow from '../../../ModalWindow.sfc' %}

    <table class="list-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Slug</th>
                <th>Category</th>
                <th>Published at</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            {% let categoryTitleById = this$._buildCategoryNameById( categories ) %}

            {% for article of articles || [] %}
                <tr>
                    <td class="text-center">\{{article.id}}</td>
                    <td>\{{article.title}}</td>
                    <td>\{{article.slug}}</td>
                    <td>\{{categoryTitleById[ article.category_id ] }}</td>
                    <td>\{{article.published_at | formatLocaleDate}}</td>
                    <td class="actions">
                        <a
                            class="btn"
                            :hrefto=\{{path("articles/edit").param("id", article.id)}}
                            data-test-update-button=\{{article.id}}
                        >
                            Edit
                        </a>
                        <button
                            data-test-delete-button=\{{article.id}}
                            class="btn-danger"
                            :onclick=\{{ () => this$.confirmDelete( article )}}
                        >
                            Delete
                        </button>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {% if deleteModalVisible %}
        <ModalWindow
            title="Delete article"
            text=\{{"Are you sure you want to delete article \"" + article.title + "\"?" }}
            isDanger=\{{true}}
            onOk=\{{this$.deleteArticle}}
            onClose=\{{this$._closeDeleteModal}}
        />
    {% endif %}
</template>

<script>
    function extendContext() {
        this.ctx.appendFilters( {
            formatLocaleDate: date => ( new Date( date ) ).toLocaleDateString( 'ru-RU',  {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            } )
        } );
    }

    function ArticlesTable( options ) {
        const showErrors = $();
        const refresh = $();
        const deleteModalVisible = $();
        const article = $();

        const state = options( {
            [ $.articles ]: [],
            [ showErrors ]() {},
            [ refresh ]() {},
            [ article ]: null,
            [ deleteModalVisible ]: false
        } );

        this$._buildCategoryNameById = categories => categories.reduce(
            ( acc, category ) => {
                acc[ category.id ] = category.name;
                return acc;
            },
            {}
        );

        this$.confirmDelete = selectedArticle => {
            state[ showErrors ]( [] );
            state( {
                [ article ]: selectedArticle,
                [ deleteModalVisible ]: true
            } );
        };

        const _closeDeleteModal = $();
        this[ _closeDeleteModal ] = () => state( {
            [ article ]: null,
            [ deleteModalVisible ]: false
        } );

        this$.deleteArticle = () => {
            this.ctx.DI.resolve( 'store' )
                .deleteArticle( state[ article ].id )
                .then(
                    state[ refresh ],
                    ( { Messages = [ 'Fail delete article' ] } ) => {
                        state[ showErrors ]( Messages );
                        this[ _closeDeleteModal ]();
                    }
                );
        };
    }

    export default Component( extendContext, Template, ArticlesTable );
</script>
