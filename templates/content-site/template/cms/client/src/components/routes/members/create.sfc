<template>
    {% import FormWithConfirmModal from '../../FormWithConfirmModal.sfc' %}

    <FormWithConfirmModal
        saveData=\{{this$._saveData}}
        onSuccess=\{{onCreateSuccess}}
        getErrors=\{{this$._getErrors}}
        submitText="Create"
        confirmTitle="Create new member"
        confirmText="Are you sure you want to create new member?"
    >
        <div class="form-group">
            <label>Name:</label>
            <input name="name" type="text" autofocus :onChangeUpdate=\{{$.name}}>
        </div>
        <div class="form-group">
            <label>Email:</label>
            <input name="email" type="text" :onChangeUpdate=\{{$.email}}>
        </div>
        <div class="form-group">
            <label></label>
            <label class="checkbox">
                <input name="is_superuser" type="checkbox" :onChangeUpdate=\{{$.isSuperUser}}>
                <span>Is Superuser</span>
            </label>
        </div>
        <div class="form-group">
            <label>Password:</label>
            <input name="pass" type="password" :onChangeUpdate=\{{$.pass}}>
        </div>
    </FormWithConfirmModal>
</template>

<script>
    function MembersCreate( options ) {
        const name = $();
        const email = $();
        const isSuperUser = $();
        const pass = $();

        const state = options( {
            [ name ]: '',
            [ email ]: '',
            [ isSuperUser ]: false,
            [ pass ]: '',
            [ $.onCreateSuccess ]() {}
        } );

        this$._saveData = () => this.DI.resolve( 'store' ).api.request( {
            url: 'admin/members',
            method: 'post',
            data: {
                name: state[ name ].trim(),
                email: state[ email ].trim(),
                is_superuser: state[ isSuperUser ],
                password: state[ pass ]
            }
        } );

        this$._getErrors = ( { Messages = [ 'Create member fail' ] } ) => Messages;
    }

    export default Component( Template, MembersCreate );
</script>
