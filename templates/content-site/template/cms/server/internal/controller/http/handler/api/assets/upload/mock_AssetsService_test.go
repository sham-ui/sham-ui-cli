// Code generated by mockery v2.20.0. DO NOT EDIT.

package upload

import (
	model "cms/internal/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockAssetsService is an autogenerated mock type for the AssetsService type
type MockAssetsService struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, filename, content
func (_m *MockAssetsService) Save(ctx context.Context, filename string, content []byte) (*model.Asset, error) {
	ret := _m.Called(ctx, filename, content)

	var r0 *model.Asset
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte) (*model.Asset, error)); ok {
		return rf(ctx, filename, content)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte) *model.Asset); ok {
		r0 = rf(ctx, filename, content)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Asset)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, []byte) error); ok {
		r1 = rf(ctx, filename, content)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockAssetsService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAssetsService creates a new instance of MockAssetsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAssetsService(t mockConstructorTestingTNewMockAssetsService) *MockAssetsService {
	mock := &MockAssetsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
